# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  #Pipeline config variables:
  EXEC_AGENT: $(agent)

  #Environment variables: 
  MSBUILD: $(msbuildpath)
  BL_PATH: $(genexus)
  WORKING_DIR: $(workingDir)
  KB_PATH: $(workingDir)\$(kbalias)
  
  #KB Building variables:
  KB_ALIAS: $(kbalias)
  GXSERVER_URL: $(serverurl)
  GXSERVER_USER: $(serveruser)
  GXSERVER_PASS: $(password)
  KBENVIRONMENT: $(environment)
  KBGENERATOR: $(generator)
  FORCE_REBUILD: $(forceRebuild)
  
  #Deploy variables:
  PUBLISH_SETTINGS: $(azurePublish)
  DEPLOYMENT_UNIT: $(deploymentUnit)
  DEPLOY_NAME: $(deploymentUnit)$(Build.BuildNumber)
  APPLICATION_KEY: $(encriptKey)
  
  #Code versioning variables:
  GIT_USER: $(gituser)
  GIT_PASSWORD: $(gitpassword) #This could alternatively be a PAT
  GIT_REPO: $(gitrepo)
  GIT_BRANCH: $(gitbranch) #Branch must exist. Content will be overwritten

# Scheduled triggers. Can also be setup through UI, which takes precendence.
schedules:
  - cron: "*/10 * * * *"
    displayName: Custom time trigger
    branches:
      include:
        - main
    always: false

trigger:
  - main

pool:
  name: $(EXEC_AGENT)

jobs:
  - job: CheckoutOrUpdate
    condition: always()
    steps:
      - script: >
          echo $(MSBUILD) "$(BL_PATH)\AzureCICD.msbuild" -target:CreateOrUpdateKB /p:WorkingDirectory=$(KB_PATH) /p:CreateDbInKbFolder=True
          /p:DbaseName=$(KB_ALIAS) /p:DbaseUseIntegratedSecurity=True /p:ServerUrl=$(GXSERVER_URL) /p:ServerKbAlias=$(KB_ALIAS) 
          /p:ServerUsername=$(GXSERVER_USER) /p:ServerPassword=$(GXSERVER_PASS)

          $(MSBUILD) $(BL_PATH)\AzureCICD.msbuild -target:CreateOrUpdateKB /p:WorkingDirectory=$(KB_PATH) /p:CreateDbInKbFolder=True
          /p:DbaseName=$(KB_ALIAS) /p:DbaseUseIntegratedSecurity=True /p:ServerUrl=$(GXSERVER_URL) /p:ServerKbAlias=$(KB_ALIAS) 
          /p:ServerUsername=$(GXSERVER_USER) /p:ServerPassword=$(GXSERVER_PASS)
          
          set /p updateCount=<"$(KB_PATH)\updateCount.txt"

          echo ##vso[task.setvariable variable=updateCount;isOutput=true]%updateCount%

        name: CreateOrUpdateKB



  - job: BuildAndDeploy
    dependsOn: CheckoutOrUpdate
    condition: or(and(succeeded(), gt(dependencies.CheckoutOrUpdate.outputs['CreateOrUpdateKB.updateCount'], '0')),eq(variables['forceRebuild'], 'true'))
    steps:
      - script: rmdir $(KB_PATH)\NETSQLServer003 /s /q
        condition: eq(variables['forceRebuild'], 'true')
        name: CleanBuildDir
      - script: $(MSBUILD) $(BL_PATH)\AzureCICD.Msbuild -target:Build /p:WorkingDirectory=$(KB_PATH) /p:ForceRebuild=$(forceRebuild)
        name: BuildKB

      - script: >
          echo $(MSBUILD) "C:\Program Files (x86)\GeneXus\genexus18u10AzureCICD\deploy.msbuild" /t:CreateDeploy /p:KBPath=$(KB_PATH);KBEnvironment=$(KBENVIRONMENT);DeploymentUnit=$(DEPLOYMENT_UNIT) 
          /p:ProjectName=$(DEPLOY_NAME) /p:TargetId=AZURE /p:ObjectNames="DeploymentUnitCategory:$(DEPLOYMENT_UNIT)"
          /p:DEPLOY_TARGETS="C:\Program Files (x86)\GeneXus\genexus18u10AzureCICD\DeploymentTargets\Azure\azure.targets" 
          /p:DeployFullPath="$(KB_PATH)\NETSQLServer003\Deploy\AZURE\$(DEPLOYMENT_UNIT)\$(DEPLOY_NAME)" 
          /p:WebSourcePath="$(KB_PATH)\NETSQLServer003\web" /p:GX_PROGRAM_DIR=$(BL_PATH) 
          /p:AZURE_PUBLISH_SETTINGS="$(PUBLISH_SETTINGS)" 
          /p:APPLICATION_KEY="$(APPLICATION_KEY)"

          $(MSBUILD) "C:\Program Files (x86)\GeneXus\genexus18u10AzureCICD\deploy.msbuild" /t:CreateDeploy /p:KBPath=$(KB_PATH);KBEnvironment=$(KBENVIRONMENT);DeploymentUnit=$(DEPLOYMENT_UNIT) 
          /p:ProjectName=$(DEPLOY_NAME) /p:TargetId=AZURE /p:ObjectNames="DeploymentUnitCategory:$(DEPLOYMENT_UNIT)"
          /p:DEPLOY_TARGETS="C:\Program Files (x86)\GeneXus\genexus18u10AzureCICD\DeploymentTargets\Azure\azure.targets" 
          /p:DeployFullPath="$(KB_PATH)\NETSQLServer003\Deploy\AZURE\$(DEPLOYMENT_UNIT)\$(DEPLOY_NAME)" 
          /p:WebSourcePath="$(KB_PATH)\NETSQLServer003\web" /p:GX_PROGRAM_DIR=$(BL_PATH) 
          /p:AZURE_PUBLISH_SETTINGS="$(PUBLISH_SETTINGS)" 
          /p:APPLICATION_KEY="$(APPLICATION_KEY)"
        name: CreateDeploy

      - script: >  
          echo $(MSBUILD) /ToolsVersion:4.0 "$(KB_PATH)\NETSQLServer003\web\$(DEPLOY_NAME).gxdproj" /t:CreatePackage 
          /p:GX_PROGRAM_DIR="C:\Program Files (x86)\GeneXus\genexus18u10AzureCICD" /p:AZURE_PUBLISH_SETTINGS="$(PUBLISH_SETTINGS)" 
          /p:APPLICATION_KEY="$(APPLICATION_KEY)"

          $(MSBUILD) /ToolsVersion:4.0 "$(KB_PATH)\NETSQLServer003\web\$(DEPLOY_NAME).gxdproj" /t:CreatePackage 
          /p:GX_PROGRAM_DIR="C:\Program Files (x86)\GeneXus\genexus18u10AzureCICD" /p:AZURE_PUBLISH_SETTINGS="$(PUBLISH_SETTINGS)" 
          /p:APPLICATION_KEY="$(APPLICATION_KEY)"
        name: CreatePackage

      - script: >
          echo $(MSBUILD) "C:\Program Files (x86)\GeneXus\genexus18u10AzureCICD\DeploymentTargets\Azure\deploy.msbuild" /t:Deploy 
          /p:AZURE_PUBLISH_SETTINGS="$(PUBLISH_SETTINGS)" 
          /p:APPLICATION_KEY="$(APPLICATION_KEY)" /p:APPLICATION_NAME="$(DEPLOY_NAME)" 
          /p:DEPLOY_PATH="$(KB_PATH)\NETSQLServer003\Deploy\AZURE\$(DEPLOYMENT_UNIT)\$(DEPLOY_NAME)" 
          /p:GX_PROGRAM_DIR=$(BL_PATH) /p:DeploySource="$(KB_PATH)\NETSQLServer003\Deploy\AZURE\$(DEPLOY_NAME).zip" 
          /p:CreateCloudPackage="false" /p:KBPath=$(KB_PATH) /p:KBEnvironment="$(KBENVIRONMENT)" /p:KBVersion="ActualizacionAmbiente2" 
          /p:DeploymentUnit="$(DEPLOYMENT_UNIT)" /p:ProjectName="$(DEPLOY_NAME)" /p:TargetId="AZURE" /p:ObjectNames="DeploymentUnitCategory:$(DEPLOYMENT_UNIT)"
          /p:DEPLOY_TARGETS="C:\Program Files (x86)\GeneXus\genexus18u10AzureCICD\DeploymentTargets\Azure\azure.targets" 
          /p:DeployFullPath="$(KB_PATH)\NETSQLServer003\Deploy\AZURE\$(DEPLOYMENT_UNIT)\$(DEPLOY_NAME)" 
          /p:WebSourcePath="$(KB_PATH)\NETSQLServer003\web" /p:GENERATOR="$(KBGENERATOR)"
          
          $(MSBUILD) "C:\Program Files (x86)\GeneXus\genexus18u10AzureCICD\DeploymentTargets\Azure\deploy.msbuild" /t:Deploy 
          /p:AZURE_PUBLISH_SETTINGS="$(PUBLISH_SETTINGS)" 
          /p:APPLICATION_KEY="$(APPLICATION_KEY)" /p:APPLICATION_NAME="$(DEPLOY_NAME)" 
          /p:DEPLOY_PATH="$(KB_PATH)\NETSQLServer003\Deploy\AZURE\$(DEPLOYMENT_UNIT)\$(DEPLOY_NAME)" 
          /p:GX_PROGRAM_DIR=$(BL_PATH) /p:DeploySource="$(KB_PATH)\NETSQLServer003\Deploy\AZURE\$(DEPLOY_NAME).zip" 
          /p:CreateCloudPackage="false" /p:KBPath=$(KB_PATH) /p:KBEnvironment="$(KBENVIRONMENT)" /p:KBVersion="ActualizacionAmbiente2" 
          /p:DeploymentUnit="$(DEPLOYMENT_UNIT)" /p:ProjectName="$(DEPLOY_NAME)" /p:TargetId="AZURE" /p:ObjectNames="DeploymentUnitCategory:$(DEPLOYMENT_UNIT)"
          /p:DEPLOY_TARGETS="C:\Program Files (x86)\GeneXus\genexus18u10AzureCICD\DeploymentTargets\Azure\azure.targets" 
          /p:DeployFullPath="$(KB_PATH)\NETSQLServer003\Deploy\AZURE\$(DEPLOYMENT_UNIT)\$(DEPLOY_NAME)" 
          /p:WebSourcePath="$(KB_PATH)\NETSQLServer003\web" /p:GENERATOR="$(KBGENERATOR)"
        name: DeploytoWebApp
  
  - job: CloneOrPull
    dependsOn: BuildAndDeploy
    condition: succeeded()
    steps:
      - script: |
          IF EXIST "$(GIT_BRANCH)" (
            cd $(GIT_BRANCH)
            git pull
          ) ELSE (
            git clone https://$(GIT_USER):$(GIT_PASSWORD)@$(GIT_REPO) $(WORKING_DIR)\$(GIT_BRANCH)
          )
        workingDirectory: $(WORKING_DIR)
        name: CloneOrPull
      
  - job: PushSourcesToGit
    dependsOn: CloneOrPull
    condition: succeeded()
    steps:
      - script: >
          xcopy /E /I /Y "$(KB_PATH)\NETSQLServer003" "$(WORKING_DIR)\$(GIT_BRANCH)"

          cd $(GIT_BRANCH)

          git add *
        
          git commit -m "Commit build $(Build.BuildNumber)"

          git push -u origin $(GIT_BRANCH)
        workingDirectory: $(WORKING_DIR)
        name: CommitPush
